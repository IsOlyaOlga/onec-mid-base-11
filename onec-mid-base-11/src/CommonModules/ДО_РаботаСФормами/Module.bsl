#Область ПрограммныйИнтерфейс

Процедура ДополнитьФорму(Форма)Экспорт

	// {{ Исакова О.С. Добавление реквизита и группы в форму в зависимости от вида документа	
ИмяФормы = Форма.ИмяФормы;

Если ИмяФормы = "Документ.ЗаказПокупателя.Форма.ФормаДокумента" Тогда
	ДобавитьПолеКонтактноеЛицоВГруппаШапкаПраво(Форма);
	ДобавитьЭлементыШапкаЛево(Форма);
ИначеЕсли ИмяФормы = "Документ.ПоступлениеТоваровУслуг.Форма.ФормаДокумента" Тогда
	ДобавитьПолеКонтактноеЛицоВГруппаШапкаПраво(Форма);
ИначеЕсли ИмяФормы = "Документ.РеализацияТоваровУслуг.Форма.ФормаДокумента" Тогда
	ДобавитьПолеКонтактноеЛицоВГруппаШапкаПраво(Форма);
ИначеЕсли ИмяФормы = "Документ.ОплатаОтПокупателя.Форма.ФормаДокумента" Тогда
	ВставитьПолеКонтактноеЛицоНаФормуПередОснование(Форма);
ИначеЕсли ИмяФормы = "Документ.ОплатаПоставщику.Форма.ФормаДокумента" Тогда
	ВставитьПолеКонтактноеЛицоНаФормуПередСуммаДокумента(Форма);
КонецЕсли;

КонецПроцедуры
 // }}

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ДобавитьПолеКонтактноеЛицоВГруппаШапкаПраво(Форма)Экспорт
	
	// {{ Исакова О.С. Добавление реквизита и группы в форму документов вида ЗаказПокупателя.
	
	ПолеВвода = Форма.Элементы.Вставить("КонтактноеЛицо", Тип("ПолеФормы"), Форма.Элементы.ГруппаШапкаПраво);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.ДО_КонтактноеЛицо";
	// }}

КонецПроцедуры

Процедура ВставитьПолеКонтактноеЛицоНаФормуПередСуммаДокумента(Форма)Экспорт
	
	// {{ Исакова О.С. Добавление реквизита и группы в форму документа ОплатаОтПоставщика.

	ПолеВвода = Форма.Элементы.Вставить("КонтактноеЛицо", Тип("ПолеФормы"),,Форма.Элементы.СуммаДокумента);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.ДО_КонтактноеЛицо";
	// }}

КонецПроцедуры 

Процедура ВставитьПолеКонтактноеЛицоНаФормуПередОснование(Форма)Экспорт
	
	// {{ Исакова О.С. Добавление реквизита и группы в форму документа ОплатаОтПокупателя.

	ПолеВвода = Форма.Элементы.Вставить("КонтактноеЛицо", Тип("ПолеФормы"),,Форма.Элементы.Основание);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.ДО_КонтактноеЛицо";
	// }}

КонецПроцедуры 

Процедура ДобавитьЭлементыШапкаЛево(Форма)Экспорт
	
	// {{ Исакова О.С. Добавление реквизита, кнопки, команды и группы в форму документа ЗаказПокупателя.
	//добавляем группу Скидка без отображения
	ГруппаСкидка = Форма.Элементы.Добавить("ГруппаСкидка", Тип("ГруппаФормы"),Форма.Элементы.ГруппаШапкаЛево);
	ГруппаСкидка.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаСкидка.Отображение = ОтображениеОбычнойГруппы.Нет;
	ГруппаСкидка.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда; 
	ГруппаСкидка.ОтображатьЗаголовок = Ложь;
	
	//добавляем поле ввода согласованная скидка
		
	ПолеВвода = Форма.Элементы.Вставить("СогласованнаяСкидка", Тип("ПолеФормы"), Форма.Элементы.ГруппаСкидка);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.ДО_СогласованнаяСкидка"; 
	
	//добавляем команду пересчитать таблицу
	
	КомандаПересчитать = Форма.Команды.Добавить("ДО_ПересчитатьТаблицу");
	КомандаПересчитать.Заголовок = "Пересчитать таблицу";
	КомандаПересчитать.Действие = "ДО_ПересчитатьТаблицу";
	
	//добавляем кнопку пересчитать таблицу
	
	Кнопка = Форма.Элементы.Добавить("КнопкаПересчитатьТаблицу", Тип("КнопкаФормы"), Форма.Элементы.ГруппаСкидка);
	Кнопка.ИмяКоманды = "ДО_ПересчитатьТаблицу";
	Кнопка.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	Кнопка.Картинка = БиблиотекаКартинок.Обновить;
	Кнопка.Отображение = ОтображениеКнопки.КартинкаИТекст; 
	
	//добавляем обработчик события при изменении
	
	Форма.Элементы.СогласованнаяСкидка.УстановитьДействие("ПриИзменении", "ДО_ДО_СогласованнаяСкидкаПриИзменении");
	// }}

КонецПроцедуры


#КонецОбласти